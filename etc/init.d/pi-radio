#!/bin/bash
# /etc/init.d/pi-radio
#

### BEGIN INIT INFO
# Provides:          pi-radio
# Required-Start:    $local_fs networking mpd 
# Required-Stop:     $local_fs
# Should-Start:      $network mpd
# Should-Stop:       $network mpd
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Raspberry Pi Internet Radio
# Description:       Start the Raspberry Pi Internet Radio service 
#                    to control local mpd via Arduino-based front-end
### END INIT INFO

DAEMON_NAME="PiRadio"
DAEMON_DIR="/home/pi/PiRadio"
DAEMON_SCRIPT="run-radio.sh"
DAEMON="${DAEMON_DIR}/${DAEMON_SCRIPT}"
DAEMONUSER="root"
PIDFILE="/var/run/pyradio.pid"

PATH="/sbin:/bin:/usr/sbin:/usr/bin:${DAEMON_DIR}"

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

d_start () {
        log_daemon_msg "Starting system $DAEMON_NAME Daemon"
		cd ${DAEMON_DIR}
        start-stop-daemon --background --name "$DAEMON_NAME" --start --make-pidfile --pidfile ${PIDFILE} --user "$DAEMONUSER" --chuid "$DAEMONUSER" --exec "$DAEMON"
        log_end_msg $?
}

d_stop () {
        log_daemon_msg "Stopping system $DAEMON_NAME Daemon"
        start-stop-daemon --stop --retry 5 --pidfile ${PIDFILE}
        log_end_msg $?
}

case "$1" in

        start|stop)
                d_${1}
                ;;

        restart|reload|force-reload)
                        d_stop
                        d_start
                ;;

        force-stop)
               d_stop
                killall -q $DEAMON_NAME || true
                sleep 2
                killall -q -9 $DEAMON_NAME || true
                ;;

        status)
                status_of_proc "$DEAMON_NAME" "$DAEMON" "system-wide $DEAMON_NAME" && exit 0 || exit $?
                ;;
        *)
                echo "Usage: /etc/init.d/$DEAMON_NAME {start|stop|force-stop|restart|reload|force-reload|status}"
                exit 1
                ;;
esac
exit 0

